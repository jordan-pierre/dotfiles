#!/bin/bash
# Dotfiles Setup Script
# Generates machine-specific configuration and sets up stow-based dotfiles

set -e

echo "🚀 Setting up dotfiles with stow..."
echo ""

# Detect OS
if [[ "$OSTYPE" == "darwin"* ]]; then
    OS="macos"
    IS_MACOS="true"
else
    OS="linux"
    IS_MACOS="false"
fi

echo "🖥️  Detected OS: $OS"
echo ""

# Prompt for machine type
echo "🏷️  What type of machine is this?"
echo "1) Work machine"
echo "2) Personal machine"
echo ""
read -p "Enter choice (1-2): " choice

case $choice in
    1)
        MACHINE_TYPE="work"
        IS_WORK="true"
        ;;
    2)
        MACHINE_TYPE="personal"
        IS_WORK="false"
        ;;
    *)
        echo "❌ Invalid choice"
        exit 1
        ;;
esac

echo ""
echo "📝 Enter configuration details:"
read -p "Your full name [Jordan Pierre]: " NAME
NAME=${NAME:-"Jordan Pierre"}
read -p "GitHub organization: " GITHUB_ORG
read -p "Git email: " GIT_EMAIL
read -p "AWS default profile (or leave empty): " AWS_PROFILE

echo ""
echo "🔧 Configuring for $MACHINE_TYPE machine on $OS..."

# Create config directory
mkdir -p ~/.config/shell

# Generate personal configuration file
cat > ~/.config/shell/personal.env << EOF
# Personal configuration - DO NOT COMMIT
# Generated by dotfiles setup script on $(date)

export IS_WORK="$IS_WORK"
export IS_MACOS="$IS_MACOS"
export GITHUB_ORG="$GITHUB_ORG"
export GIT_EMAIL="$GIT_EMAIL"
export AWS_PROFILE="$AWS_PROFILE"
export NAME="$NAME"
EOF

echo "✅ Personal config created at ~/.config/shell/personal.env"

# Create local machine config file
cat > ~/.zsh_local_rc << 'EOF'
# Local machine-specific configuration
# This file is not synced and can contain:
# - Machine-specific apps and tools
# - Company/work-specific items
# - Experimental configurations
# - Local development shortcuts

# Example: Company dashboard function
# ob() {
#     open "https://your-company-dashboard.com/"
# }

# Example: Machine-specific aliases
# alias projects='cd /path/to/your/projects'

# Add your local configurations below:

EOF

echo "✅ Local config created at ~/.zsh_local_rc"

# Configure git
echo "🔧 Configuring git..."
git config --global user.name "$NAME"
git config --global user.email "$GIT_EMAIL"

# Install stow if not present
if ! command -v stow &> /dev/null; then
    echo "📦 Installing stow..."
    if [[ "$OS" == "macos" ]]; then
        if command -v brew &> /dev/null; then
            brew install stow
        else
            echo "❌ Homebrew not found. Please install stow manually: brew install stow"
            exit 1
        fi
    else
        # Try different package managers
        if command -v dnf &> /dev/null; then
            sudo dnf install -y stow
        elif command -v apt &> /dev/null; then
            sudo apt update && sudo apt install -y stow
        else
            echo "❌ Could not install stow. Please install manually."
            exit 1
        fi
    fi
fi

echo ""
echo "🎉 Setup complete!"
echo ""
echo "Next steps:"
echo "1. Review and edit ~/.zsh_local_rc for machine-specific configurations"
echo "2. Run 'stow .' from this directory to create symlinks"
echo "3. Restart your terminal or run 'source ~/.zshrc'"
echo ""
echo "📝 To add machine-specific items, edit: ~/.zsh_local_rc"
echo "🔧 To modify synced configurations, edit files in this dotfiles directory"
